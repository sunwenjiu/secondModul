package com.sunwenjiu.second.message.repository;import com.sunwenjiu.second.message.enums.MessageStatusEnum;import com.sunwenjiu.second.message.entity.Message;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.data.jpa.repository.JpaSpecificationExecutor;import org.springframework.data.jpa.repository.Modifying;import org.springframework.data.jpa.repository.Query;import org.springframework.data.repository.query.Param;import java.util.Date;import java.util.List;/** * 消息持久层 * @author SWJ */public interface MessageRepository extends JpaRepository<Message,String>,JpaSpecificationExecutor<Message> {    /**     * 标记一条消息为已读     * @param messageStatus     * @param msgId     * @return     */    @Modifying    @Query("UPDATE Message m SET m.messageStatus = :messageStatus ,m.updateTime =:updateTime WHERE m.id= :msgId")    Integer updateMessageStatusByMsgId(@Param("messageStatus") MessageStatusEnum messageStatus, @Param("msgId") String msgId, @Param("updateTime") Date updateTime);    /**     * 通过接收人的ID寻找     * @param receivedId     * @return     */    List<Message> findAllByReceivedId(String receivedId);    /**     * 多选删除     * @param ids     * @return     */    @Modifying    @Query(value="delete from Message m where m.id in (:ids) ")    int deleteByMsgIdIn(@Param("ids") List<String> ids);    /**     * 获取不同消息类型，不同条数的消息(事件消息通知)     * @param messageType     * @param limit     * @return     */    @Query(value = "SELECT * FROM message WHERE message_type = ?1 AND received_id = ?2 ORDER BY create_time DESC LIMIT ?3  ",nativeQuery = true)    List<Message> getListByTypeInEvent(int messageType, String receiveId, int limit);    /**     * 获取不同消息类型，不同条数的消息(事件公告通知)     * @param messageType     * @param limit     * @return     */    @Query(value = "SELECT * FROM message WHERE message_type = ?1 ORDER BY create_time DESC LIMIT ?2 ",nativeQuery = true)    List<Message> getListByTypeInNotic(int messageType, int limit);}